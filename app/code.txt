LoginController.php 
<?php

//modified code
namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\User;

class LoginController extends Controller
{
    // Show the login form
    public function showLoginForm()
    {
        return view('auth.login');
    }

    // Handle the login logic using email only
    public function login(Request $request)
    {
        $request->validate([
            'email' => 'required|email',
        ]);

        $user = User::where('email', $request->email)->first();

        if ($user) {
            Auth::login($user); // Logs in the user without password
            return $this->authenticated($request, $user);
        }

        return redirect()->back()->withErrors(['email' => 'Email not found.']);
    }

    // Redirect user based on role
    protected function authenticated(Request $request, $user)
    {
        if ($user->role == 'admin') {
            return redirect()->route('admin.register');
        }

        return redirect()->route('student.register');
    }
}

// namespace App\Http\Controllers\Auth;

// use App\Http\Controllers\Controller;
// use Illuminate\Http\Request;
// use Illuminate\Support\Facades\Auth;

// class LoginController extends Controller
// {
//     // Override the authenticated method to redirect based on user role
//     public function authenticated(Request $request, $user)
//     {
//         if ($user->role == 'admin') {
//             return redirect()->route('admin.register');
//         }

//         return redirect()->route('student.register');
//     }

//     // Show the login form
//     public function showLoginForm()
//     {
//         return view('auth.login');
//     }

//     // Handle the login logic
//     public function login(Request $request)
//     {
//         $credentials = $request->only('email');

//         if (Auth::attempt($credentials)) {
//             return $this->authenticated($request, Auth::user());
//         }

//         return redirect()->back()->withErrors(['email' => 'Invalid credentials.']);
//     }
// }

// namespace App\Http\Controllers\Auth;

// use App\Http\Controllers\Controller;
// use Illuminate\Http\Request;
// use Illuminate\Support\Facades\Auth;

// class LoginController extends Controller
// {
//     // Override the authenticated method to redirect based on user role
//     public function authenticated(Request $request, $user)
//     {
//         if ($user->role == 'admin') {
//             return redirect()->route('admin.register');
//         }

//         return redirect()->route('student.register');
//     }

//     // Show the login form
//     public function showLoginForm()
//     {
//         return view('auth.login');
//     }

//     // Handle the login logic
//     public function login(Request $request)
//     {
//         $credentials = $request->only('email', 'password');

//         if (Auth::attempt($credentials)) {
//             return $this->authenticated($request, Auth::user());
//         }

//         return redirect()->back()->withErrors(['email' => 'Invalid credentials.']);
//     }

//     // Show the admin registration form
//     public function showAdminRegistrationForm()
//     {
//         return view('auth.admin_register');
//     }

//     // Show the student registration form
//     public function showStudentRegistrationForm()
//     {
//         return view('auth.student_register');
//     }
// }









RegisterController.php  

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\User;
use App\Models\Admin;
use App\Models\Student;
use Illuminate\Support\Facades\Auth;

class RegisterController extends Controller
{
    // Show role selection registration form
    public function showRegistrationForm()
    {
        return view('auth.register');
    }

    // Handle initial registration (select role and email)
    public function register(Request $request)
    {
        $validated = $request->validate([
            'email' => 'required|string|email|max:255|unique:users',
            'role' => 'required|in:admin,student',
        ]);

        // Create user (basic info)
        $user = User::create([
            'email' => $validated['email'],
            'role' => $validated['role'],
        ]);

        // Login user
        Auth::login($user);

        // Redirect based on role
        if ($user->role === 'admin') {
            return redirect()->route('auth.admin_register');
        } elseif ($user->role === 'student') {
            return redirect()->route('auth.student_register');
        }
    }

    // Show the admin details form (after initial email+role)
    public function showAdminRegistrationForm()
    {
        return view('auth.admin_register');
    }

    // Handle admin details submission
    public function registerAdmin(Request $request)
    {
        $validated = $request->validate([
            'email' => 'required|email|exists:users,email',
            'role' => 'required|in:admin',
            'first_name' => 'required|string|max:100',
            'last_name' => 'required|string|max:100',
            'phone_number' => 'required|string|max:15',
        ]);

        $user = Auth::user();

        // Ensure the logged-in user matches the provided email and role
        if ($user->email !== $validated['email'] || $user->role !== $validated['role']) {
            abort(403, 'Unauthorized access.');
        }

        // Create related admin record
        Admin::create([
            'user_id' => $user->id,
            'first_name' => $validated['first_name'],
            'last_name' => $validated['last_name'],
            'phone_number' => $validated['phone_number'],
        ]);

        return redirect()->route('admin.dashboard')->with('success', 'Admin registered successfully.');
    }
    // Show the student details form
    public function showStudentRegistrationForm()
    {
        return view('auth.student_register');
    }
    
    // Handle student details submission
    public function registerStudent(Request $request)
    {
        $validated = $request->validate([
            'email' => 'required|email|exists:users,email',
            'role' => 'required|in:student',
            'first_name' => 'required|string|max:100',
            'last_name' => 'required|string|max:100',
            'phone_number' => 'required|string|max:15',
            'date_of_birth' => 'required|date',
            'gender' => 'required|in:male,female,other',
            'address' => 'required|string|max:255',
            'course' => 'required|string|max:100',
            'city' => 'required|string|max:100',  // Added validation for city
            'state' => 'required|string|max:100', // Added validation for state
            'registration_number' => 'required|string|max:100|unique:students', // Added validation for registration number
            'class' => 'required|string|max:50',  // Added validation for class
            'division' => 'required|string|max:50', // Added validation for division
        ]);
    
        $user = Auth::user();
    
        if ($user->email !== $validated['email'] || $user->role !== $validated['role']) {
            abort(403, 'Unauthorized access.');
        }
    
        Student::create([
            'user_id' => $user->id,
            'first_name' => $validated['first_name'],
            'last_name' => $validated['last_name'],
            'phone_number' => $validated['phone_number'],
            'date_of_birth' => $validated['date_of_birth'],
            'gender' => $validated['gender'],
            'address' => $validated['address'],
            'course' => $validated['course'],
            'city' => $validated['city'],  // Added city
            'state' => $validated['state'], // Added state
            'registration_number' => $validated['registration_number'], // Added registration number
            'class' => $validated['class'], // Added class
            'division' => $validated['division'], // Added division
        ]);
    
        return redirect()->route('student.dashboard')->with('success', 'Student registered successfully.');
    }
    

}




AdminController.php 

<?php 
namespace App\Http\Controllers;

use App\Models\Admin;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class AdminController extends Controller
{
    // Show the admin registration form
    public function showRegistrationForm()
    {
        return view('admin.register');  // Ensure you have a Blade view for the registration form
    }

    // Handle admin registration form submission
    public function submitAdminRegistration(Request $request)
    {
        // Validate the incoming request data
        $validated = $request->validate([
            'first_name' => 'required|string|max:255',
            'last_name' => 'required|string|max:255',
            'phone_number' => 'required|string|max:15',
            'profile_picture' => 'nullable|image|mimes:jpeg,png,jpg,gif,svg|max:2048',  // Validate image
        ]);

        // Handle file upload for profile picture if exists
        $profilePicturePath = null;
        if ($request->hasFile('profile_picture')) {
            $profilePicturePath = $request->file('profile_picture')->store('profile_pictures', 'public');  // Store image in public disk
        }

        // Create admin user (assuming the user is already authenticated)
        $admin = new Admin();
        $admin->user_id = Auth::id();  // Assuming the user is already authenticated
        $admin->first_name = $validated['first_name'];
        $admin->last_name = $validated['last_name'];
        $admin->phone_number = $validated['phone_number'];
        $admin->profile_picture = $profilePicturePath;  // Store the profile picture path if uploaded
        $admin->save();

        // Redirect to the admin dashboard or another page after successful registration
        return redirect()->route('admin.dashboard');
    }
}


StudentCopntroller.php 

<?php 
namespace App\Http\Controllers;

use App\Models\Student;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class StudentController extends Controller
{
    // Show the student registration form
    public function showRegistrationForm()
    {
        return view('student.register');  // Ensure you have a Blade view for the registration form
    }

    // Handle student registration form submission
    public function submitStudentRegistration(Request $request)
    {
        // Validate the incoming request data
        $validated = $request->validate([
            'first_name' => 'required|string|max:255',
            'last_name' => 'required|string|max:255',
            'phone_number' => 'required|string|max:15',
            'address' => 'required|string',
            'city' => 'required|string',
            'state' => 'required|string',
            'date_of_birth' => 'required|date',
            'gender' => 'required|in:male,female,other',
            'course' => 'required|string',
            'registration_number' => 'required|string|unique:students',
            'class' => 'required|string',
            'division' => 'required|string',
        ]);

        // Create a new student record with validated data
        $student = new Student();
        $student->user_id = Auth::id();  // Assuming the user is already authenticated
        $student->first_name = $validated['first_name'];
        $student->last_name = $validated['last_name'];
        $student->phone_number = $validated['phone_number'];
        $student->address = $validated['address'];
        $student->city = $validated['city'];
        $student->state = $validated['state'];
        $student->date_of_birth = $validated['date_of_birth'];
        $student->gender = $validated['gender'];
        $student->course = $validated['course'];
        $student->registration_number = $validated['registration_number'];
        $student->class = $validated['class'];
        $student->division = $validated['division'];
        $student->save();

        // Redirect to student dashboard or another page after successful registration
        return redirect()->route('student.dashboard');
    }
}

////////////Models
Admin.php 

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Admin extends Model
{
    use HasFactory;

    protected $fillable = [
        'user_id',
        'first_name',
        'last_name',
        'phone_number',
        'profile_picture',
    ];

    public function user()
    {
        return $this->belongsTo(User::class);
    }
}


Student.php 
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Student extends Model
{
    use HasFactory;

    protected $fillable = [
        'user_id',
        'first_name',
        'last_name',
        'phone_number',
        'address',
        'city',
        'state',
        'date_of_birth',
        'gender',
        'course',
        'registration_number',
        'class',
        'division',
    ];

    public function user()
    {
        return $this->belongsTo(User::class);
    }
}

User.php 
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Laravel\Passport\HasApiTokens; // Passport trait for API auth

class User extends Authenticatable
{
    use HasApiTokens, HasFactory;

    protected $fillable = [
        'email',
        'role',
    ];

    protected $hidden = [
        'remember_token',
    ];

    // Relation to student
    public function student()
    {
        return $this->hasOne(Student::class);
    }

    // Relation to admin
    public function admin()
    {
        return $this->hasOne(Admin::class);
    }
}

//////////////////////////////database schema 

User 
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    public function up(): void {
        // Creating the 'users' table
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('email')->unique(); // Email column, unique to prevent duplicates
            // $table->string('password'); // Password column for storing hashed passwords
            $table->enum('role', ['admin', 'student']); // Role column to define if user is an admin or student
            $table->timestamps(); // Laravel timestamps (created_at and updated_at)
        });

        // Creating the 'password_reset_tokens' table
        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary(); // Email as primary key
            $table->string('token'); // Token for resetting passwords
            $table->timestamp('created_at')->nullable(); // When the token was created
        });

        // Creating the 'sessions' table to store session data
        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary(); // Session ID as the primary key
            $table->foreignId('user_id')->nullable()->index(); // User ID referencing the user table
            $table->string('ip_address', 45)->nullable(); // IP address of the user
            $table->text('user_agent')->nullable(); // User's agent (browser, OS)
            $table->longText('payload'); // Payload for session data
            $table->integer('last_activity')->index(); // Timestamp for last activity
        });
    }

    public function down(): void {
        // Drop the 'users', 'password_reset_tokens', and 'sessions' tables if rolling back
        Schema::dropIfExists('users');
        Schema::dropIfExists('password_reset_tokens');
        Schema::dropIfExists('sessions');
    }
};



Admin 
<?php 
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up(): void {
        Schema::create('admins', function (Blueprint $table) {
            $table->id(); // Auto-incrementing ID
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade'); // Foreign key referencing 'users' table
            $table->string('first_name'); // Admin's first name
            $table->string('last_name'); // Admin's last name
            $table->string('phone_number'); // Admin's phone number
            $table->string('profile_picture')->nullable(); // Admin's profile picture (nullable)
            $table->timestamps(); // Created at and updated at timestamps
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down(): void {
        Schema::dropIfExists('admins'); // Drop the 'admins' table if rolling back the migration
    }
};

Student 
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    public function up(): void {
        Schema::create('students', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            $table->string('first_name');
            $table->string('last_name');
            $table->string('phone_number');
            $table->string('address');
            $table->string('city');
            $table->string('state');
            $table->date('date_of_birth');
            $table->enum('gender', ['male', 'female', 'other']);
            $table->string('course');
            $table->string('registration_number')->unique();
            $table->string('class');
            $table->string('division');
            $table->timestamps();
        });
    }

    public function down(): void {
        Schema::dropIfExists('students');
    }
};


Views 

Views/Admin 

Dashboard.blade.php 
<h2>Welcome, 
    @if(Auth::user()->role === 'admin')
        {{ Auth::user()->admin->first_name }} {{ Auth::user()->admin->last_name }}
    @else
        Guest
    @endif
!</h2>
<p>This is your dashboard.</p>


Register.blade.php 
<!-- resources/views/admin/register.blade.php -->

<form action="{{ route('admin.register.submit') }}" method="POST" enctype="multipart/form-data">
    @csrf
    <div>
        <label for="first_name">First Name</label>
        <input type="text" id="first_name" name="first_name" value="{{ old('first_name') }}" required>
        @error('first_name')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="last_name">Last Name</label>
        <input type="text" id="last_name" name="last_name" value="{{ old('last_name') }}" required>
        @error('last_name')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="phone_number">Phone Number</label>
        <input type="text" id="phone_number" name="phone_number" value="{{ old('phone_number') }}" required>
        @error('phone_number')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="profile_picture">Profile Picture</label>
        <input type="file" id="profile_picture" name="profile_picture">
        @error('profile_picture')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <button type="submit">Register</button>
</form>


Views/Auth 

admin_register.blade.php
@extends('layouts.app')

@section('content')
<div class="max-w-md mx-auto mt-10 bg-white p-6 rounded shadow-md">
    <h2 class="text-2xl font-bold mb-4 text-center">Admin Registration</h2>

    @if(session('success'))
        <div class="bg-green-100 text-green-700 p-2 rounded mb-4">
            {{ session('success') }}
        </div>
    @endif

    <form action="{{ route('auth.admin_register.submit') }}" method="POST" enctype="multipart/form-data">
        @csrf

        <input type="hidden" name="email" value="{{ auth()->user()->email }}">
        <input type="hidden" name="role" value="admin">

        <div class="mb-4">
            <label for="first_name" class="block font-medium">First Name</label>
            <input type="text" name="first_name" id="first_name" value="{{ old('first_name') }}"
                   class="w-full border-gray-300 rounded p-2" required>
            @error('first_name')
                <div class="text-red-600 text-sm">{{ $message }}</div>
            @enderror
        </div>

        <div class="mb-4">
            <label for="last_name" class="block font-medium">Last Name</label>
            <input type="text" name="last_name" id="last_name" value="{{ old('last_name') }}"
                   class="w-full border-gray-300 rounded p-2" required>
            @error('last_name')
                <div class="text-red-600 text-sm">{{ $message }}</div>
            @enderror
        </div>

        <div class="mb-4">
            <label for="phone_number" class="block font-medium">Phone Number</label>
            <input type="text" name="phone_number" id="phone_number" value="{{ old('phone_number') }}"
                   class="w-full border-gray-300 rounded p-2" required>
            @error('phone_number')
                <div class="text-red-600 text-sm">{{ $message }}</div>
            @enderror
        </div>

        <div class="mb-4">
            <label for="profile_picture" class="block font-medium">Profile Picture</label>
            <input type="file" name="profile_picture" id="profile_picture" class="w-full border-gray-300 rounded p-2">
            @error('profile_picture')
                <div class="text-red-600 text-sm">{{ $message }}</div>
            @enderror
        </div>

        <div class="mt-6">
            <button type="submit"
                    class="w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700">
                Complete Registration
            </button>
        </div>
    </form>
</div>
@endsection


login.blade.php 
<form method="POST" action="{{ route('login') }}">
    @csrf
    <label for="email">Email:</label>
    <input type="email" name="email" required>

    <button type="submit">Login</button>
</form>


register.blade.php 
<!-- resources/views/auth/register.blade.php -->
<form action="{{ route('register') }}" method="POST">
    @csrf

    <!-- Email field -->
    <div>
        <label for="email">Email</label>
        <input type="email" name="email" id="email" value="{{ old('email') }}" required>
        @error('email')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <!-- Role selection (Radio buttons for Admin or Student) -->
    <div>
        <label>Role</label><br>
        <label for="role_admin">
            <input type="radio" name="role" id="role_admin" value="admin" {{ old('role') == 'admin' ? 'checked' : '' }} required> Admin
        </label>
        <label for="role_student">
            <input type="radio" name="role" id="role_student" value="student" {{ old('role') == 'student' ? 'checked' : '' }} required> Student
        </label>
        @error('role')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <!-- Submit button -->
    <button type="submit">Register</button>
</form>


student_register.php 
<!-- resources/views/auth/student_register.blade.php -->

<form action="{{ route('auth.student_register.submit') }}" method="POST">
    @csrf

    <!-- Hidden inputs for email and role -->
    <input type="hidden" name="email" value="{{ auth()->user()->email }}">
    <input type="hidden" name="role" value="student">

    <!-- Input fields for student details -->
    <input type="text" name="first_name" placeholder="First Name" value="{{ old('first_name') }}" required>
    @error('first_name') <div class="error">{{ $message }}</div> @enderror

    <input type="text" name="last_name" placeholder="Last Name" value="{{ old('last_name') }}" required>
    @error('last_name') <div class="error">{{ $message }}</div> @enderror

    <input type="text" name="phone_number" placeholder="Phone Number" value="{{ old('phone_number') }}" required>
    @error('phone_number') <div class="error">{{ $message }}</div> @enderror

    <input type="date" name="date_of_birth" value="{{ old('date_of_birth') }}" required>
    @error('date_of_birth') <div class="error">{{ $message }}</div> @enderror

    <select name="gender" required>
        <option value="">Select Gender</option>
        <option value="male" {{ old('gender') == 'male' ? 'selected' : '' }}>Male</option>
        <option value="female" {{ old('gender') == 'female' ? 'selected' : '' }}>Female</option>
        <option value="other" {{ old('gender') == 'other' ? 'selected' : '' }}>Other</option>
    </select>
    @error('gender') <div class="error">{{ $message }}</div> @enderror

    <input type="text" name="address" placeholder="Address" value="{{ old('address') }}" required>
    @error('address') <div class="error">{{ $message }}</div> @enderror

    <input type="text" name="city" placeholder="City" value="{{ old('city') }}" required>
    @error('city') <div class="error">{{ $message }}</div> @enderror

    <input type="text" name="state" placeholder="State" value="{{ old('state') }}" required>
    @error('state') <div class="error">{{ $message }}</div> @enderror

    <input type="text" name="registration_number" placeholder="Registration Number" value="{{ old('registration_number') }}" required>
    @error('registration_number') <div class="error">{{ $message }}</div> @enderror

    <input type="text" name="class" placeholder="Class" value="{{ old('class') }}" required>
    @error('class') <div class="error">{{ $message }}</div> @enderror

    <input type="text" name="division" placeholder="Division" value="{{ old('division') }}" required>
    @error('division') <div class="error">{{ $message }}</div> @enderror

    <input type="text" name="course" placeholder="Course" value="{{ old('course') }}" required>
    @error('course') <div class="error">{{ $message }}</div> @enderror

    <button type="submit">Complete Registration</button>
</form>


Views/layouts

app.blade.php 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Laravel App</title>
    <!-- Add your CSS or links to any CSS files here -->
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <link href="{{ asset('css/app.css') }}" rel="stylesheet"> <!-- Optional: Link to your compiled CSS -->
</head>
<body class="bg-gray-100 font-roboto">

    <!-- Main Navigation (optional) -->
    <header>
        <nav class="bg-blue-600 text-white py-3">
            <div class="container mx-auto">
                <a href="{{ url('/') }}" class="text-lg font-semibold">Laravel App</a>
            </div>
        </nav>
    </header>

    <!-- Main Content Section -->
    <main class="py-8">
        @yield('content') <!-- Content of specific pages will be injected here -->
    </main>

    <!-- Footer (optional) -->
    <footer class="bg-gray-800 text-white py-4 mt-8">
        <div class="container mx-auto text-center">
            <p>&copy; {{ date('Y') }} Laravel App</p>
        </div>
    </footer>

</body>
</html>

View/Student

dashboard.blade.php 
<h2>Welcome, 
    @if(Auth::user()->role === 'student')
        {{ Auth::user()->student->first_name }} {{ Auth::user()->student->last_name }} {{ Auth::user()->email }}
    @else
        Guest
    @endif
!</h2>
<p>This is your dashboard.</p>


register.blade.php
<!-- resources/views/student/register.blade.php -->

<form action="{{ route('student.register.submit') }}" method="POST">
    @csrf
    <div>
        <label for="first_name">First Name</label>
        <input type="text" id="first_name" name="first_name" value="{{ old('first_name') }}" required>
        @error('first_name')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="last_name">Last Name</label>
        <input type="text" id="last_name" name="last_name" value="{{ old('last_name') }}" required>
        @error('last_name')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="phone_number">Phone Number</label>
        <input type="text" id="phone_number" name="phone_number" value="{{ old('phone_number') }}" required>
        @error('phone_number')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="address">Address</label>
        <input type="text" id="address" name="address" value="{{ old('address') }}" required>
        @error('address')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="city">City</label>
        <input type="text" id="city" name="city" value="{{ old('city') }}" required>
        @error('city')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="state">State</label>
        <input type="text" id="state" name="state" value="{{ old('state') }}" required>
        @error('state')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="date_of_birth">Date of Birth</label>
        <input type="date" id="date_of_birth" name="date_of_birth" value="{{ old('date_of_birth') }}" required>
        @error('date_of_birth')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="gender">Gender</label>
        <select id="gender" name="gender" required>
            <option value="male" {{ old('gender') == 'male' ? 'selected' : '' }}>Male</option>
            <option value="female" {{ old('gender') == 'female' ? 'selected' : '' }}>Female</option>
            <option value="other" {{ old('gender') == 'other' ? 'selected' : '' }}>Other</option>
        </select>
        @error('gender')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="course">Course</label>
        <input type="text" id="course" name="course" value="{{ old('course') }}" required>
        @error('course')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="registration_number">Registration Number</label>
        <input type="text" id="registration_number" name="registration_number" value="{{ old('registration_number') }}" required>
        @error('registration_number')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="class">Class</label>
        <input type="text" id="class" name="class" value="{{ old('class') }}" required>
        @error('class')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <div>
        <label for="division">Division</label>
        <input type="text" id="division" name="division" value="{{ old('division') }}" required>
        @error('division')
            <div>{{ $message }}</div>
        @enderror
    </div>

    <button type="submit">Register</button>
</form>



routes 
<?php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\Auth\LoginController;
use App\Http\Controllers\AdminController;
use App\Http\Controllers\StudentController;
use App\Http\Controllers\Auth\RegisterController;


Route::get('/', function () {
    return view('welcome');
});


// Registration and login routes
Route::get('login', [LoginController::class, 'showLoginForm'])->name('login');
Route::post('login', [LoginController::class, 'login']);
// Route::get('register', [LoginController::class, 'showRegistrationForm'])->name('register');
// Route::post('register', [LoginController::class, 'register']);
Route::get('register', [RegisterController::class, 'showRegistrationForm'])->name('register');
Route::post('register', [RegisterController::class, 'register']);



// Show admin registration form
Route::get('/register/admin', [RegisterController::class, 'showAdminRegistrationForm'])->name('auth.admin_register');

// Handle admin registration submission
Route::post('/register/admin', [RegisterController::class, 'registerAdmin'])->name('auth.admin_register.submit');
// Route for showing the student registration form
Route::get('register/student', [RegisterController::class, 'showStudentRegistrationForm'])->name('auth.student_register');

// Route for handling the student registration form submission
Route::post('register/student', [RegisterController::class, 'registerStudent'])->name('auth.student_register.submit');
// Admin registration route
Route::get('admin/register', [AdminController::class, 'showRegistrationForm'])->name('admin.register');
Route::post('admin/register', [AdminController::class, 'store'])->name('admin.store');

// Student registration route
Route::get('student/register', [StudentController::class, 'showRegistrationForm'])->name('student.register');
Route::post('student/register', [StudentController::class, 'store'])->name('student.store');

// Admin and student dashboards (as placeholders)
Route::get('admin/dashboard', function() {
    return view('admin.dashboard');
})->name('admin.dashboard');

Route::get('student/dashboard', function() {
    return view('student.dashboard');
})->name('student.dashboard');
Route::get('admin/dashboard', function () {
    return view('admin.dashboard');
})->name('admin.dashboard');

Route::get('student/dashboard', function () {
    return view('student.dashboard');
})->name('student.dashboard');


// // Route to show the admin registration form
// Route::get('admin/register', [LoginController::class, 'showAdminRegistrationForm'])->name('admin.register');

// // Route to show the student registration form
// Route::get('student/register', [LoginController::class, 'showStudentRegistrationForm'])->name('student.register');

// // Handle form submissions for admin registration
// Route::post('admin/register', [LoginController::class, 'submitAdminRegistration'])->name('admin.register.submit');

// // Handle form submissions for student registration
// Route::post('student/register', [LoginController::class, 'submitStudentRegistration'])->name('student.register.submit');
// Show admin registration form
Route::get('admin/register', [AdminController::class, 'showRegistrationForm'])->name('admin.register');

// Handle admin registration form submission
Route::post('admin/register', [AdminController::class, 'submitAdminRegistration'])->name('admin.register.submit');
// Show student registration form
Route::get('student/register', [StudentController::class, 'showRegistrationForm'])->name('student.register');

// Handle student registration submission
Route::post('student/register', [StudentController::class, 'submitStudentRegistration'])->name('student.register.submit');
// use App\Http\Controllers\Auth\RegisterController;

// // Route::get('register', [RegisterController::class, 'showRegistrationForm'])->name('register');
// // Route::post('register', [RegisterController::class, 'register']);
